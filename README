See README.tcc for the original document

This is an experimental port of tinycc (http://tinycc.org)

You can run C source code on NaCl, which means, you can run C programs
on your browser without interaction with servers.

The development is not completed at all. You may see weird errors even
for simple programs. Especially, x86-64 support should be terrible.
Also, this cannot generate NaCl ELF yet. It can only preprocess source
code or run the source code directly.

* Demo

http://shinh.skr.jp/nacltcc/tinycc.html

* How to build

- prerequisites

You need at least the followings:

NaCl SDK (my version is native_client_sdk_0_5_105)
ruby
make, etc.

For web interface, you also need:

naclports (my revision is 433)
Chrome (tested on 15.0.874.5 dev on 64bit linux, 14.0.835.186 on 32bit mac)

You need to set NACL_SDK_ROOT environment variable before the next step:

% export NACL_SDK_ROOT=$HOME/src/native_client_sdk_0_5_1052

- build the CLI version

% ./nacl-configure
% make

This will build 32bit binary by default. Please specify
NACL_PACKAGES_BITSIZE if you want 64bit binary:

% NACL_PACKAGES_BITSIZE=64 ./nacl-configure
% make

- run the CLI version

% $NACL_SDK_ROOT/toolchain/*/bin/sel_ldr_x86_32 -a ./tcc -B. -run hello.c

If you are using 64bit version, please use sel_ldr_x86_64 instead.
Of course, you may want to replace * to your actual toolchain directory.

- build the web version

Again, please note that you need naclports and NACL_SDK_ROOT
environment variable.

% cd demo
% make
% ./pack_data.sh path_to/naclports/src/libraries/nacl-mounts/util/simple_tar.py

Then, put data.sar, tinycc.html, tinycc.nmf, and *.nexe in your web server.

* Known issues

- 32bit version is crashing on my 64bit linux. I don't know why.

* License

TCC's (i.e., GPLv2)
